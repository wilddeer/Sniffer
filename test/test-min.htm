<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta name="msapplication-tap-highlight" content="no">

	<style>
		#test_console {
			margin-bottom: 1.5rem;
		}

		#test_console p {
			font-size: 0.8em;
			font-family: Consolas, Monaco, 'Andale Mono', monospace, serif;
			padding: 0.5em;
			margin: 0;
			border-bottom: 1px solid white;
		}

		#test_console .info {
			background: #f5f5f5;
		}

		#test_console .warning {
			color: white;
			background: #eec507;
		}

		#test_console .error {
			color: white;
			background: #ee6907;
		}
	</style>

	<title>Test</title>

	<script src="../sniffer.min.js"></script>
</head>

<body>
	<div id="test_console">
	</div>

	<script>
		var testConsole = {
			log: function(message) {
				this.add(message, 'info');
			},
			warn: function(message) {
				this.add(message, 'warning');
			},
			error: function(message, source, file) {
				this.add([message, source, file].join('<br>'), 'error');
			},
			add: function(message, type) {
				var consoleBlock = document.getElementById('test_console');

				if (consoleBlock) {
					if (typeof message !== 'string') message = '<i>' + message + '</i>';
				
					consoleBlock.innerHTML += '<p class=' + type + '>' + message + '</p>';
				}
				else {
					console.warn('No test console block');
				}
			}
		};

		testConsole.log('<b>Sniffer.os.name</b><br>'+Sniffer.os.name);
		testConsole.log('<b>Sniffer.os.version</b><br>'+Sniffer.os.version);
		testConsole.log('<b>Sniffer.browser.name</b><br>'+Sniffer.browser.name);
		testConsole.log('<b>Sniffer.browser.engine</b><br>'+Sniffer.browser.engine);
		testConsole.log('<b>Sniffer.browser.version</b><br>'+Sniffer.browser.version);

		for (var prop in Sniffer.features) {
			testConsole.log('<b>Sniffer.features.'+prop+':</b><br>'+Sniffer.features[prop]);
		}
	</script>
</body>

</html>